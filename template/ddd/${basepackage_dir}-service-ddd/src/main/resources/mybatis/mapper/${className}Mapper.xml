<#include "/macro.include"/>
<#assign className = table.className>
<#assign classNameFirstLower = table.classNameFirstLower>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<#macro mapperEl value>${r"#{"}${value}}</#macro>
<mapper namespace="${grouppackage}.${basepackage}.dao.mapper.${className}Mapper">

    <resultMap id="BaseResultMap" type="${basepackage}.model.${className}">
        <#list table.columns as column>
        <#if column.pk>
            <id property="${column.columnNameLower}" column="${column.sqlName}" jdbcType="${column.jdbcSqlTypeName}"/>
        </#if>
        <#if !column.pk>
            <result property="${column.columnNameLower}" column="${column.sqlName}" jdbcType="${column.jdbcSqlTypeName}"/>
        </#if>
        </#list>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="Base_Column_List">
        <#list table.columns as column>m.${column.sqlName}<#if column_has_next>,</#if></#list>
    </sql>

    <select id="getById" parameterType="int" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List" />
        from
            ${table.sqlName} m
        where
            id = <@mapperEl "id"/>
    </select>

    <select id="countBy" resultType="int">
        select count(*)
        from ${table.sqlName}
        where 1=1
        <#list table.columns as column>
          <if test="query != null and query.${column.columnNameFirstLower} != null">
            and ${column.sqlName} = ${r'#{ query.'}${column.columnNameFirstLower}, jdbcType=${column.jdbcSqlTypeName} ${r'}'}
          </if>
        </#list>
    </select>

    <select id="search" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List" />
        from ${table.sqlName} m
        where 1=1
        <#list table.columns as column>
            <if test="query != null and query.${column.columnNameFirstLower} != null">
              and ${column.sqlName} = ${r'#{'} query.${column.columnNameFirstLower}, jdbcType=${column.jdbcSqlTypeName} ${r'}'}
            </if>
        </#list>

    </select>

    <update id="update" parameterType="${basepackage}.model.${className}">
        update ${table.sqlName}
        <set>
            <#list table.notPkColumns as column>
            <if test="${column.columnNameFirstLower} != null">
              ${column.sqlName} = ${r'#{'}${column.columnNameFirstLower}, jdbcType=${column.jdbcSqlTypeName} ${r'}'},
            </if>
            </#list>
        </set>
        where
            id = <@mapperEl "id"/>
    </update>

    <delete id="deleteById" parameterType="int">
        delete from ${table.sqlName}
        where
            id = <@mapperEl "id"/>
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
        parameterType="${basepackage}.model.${className}">
        insert into ${table.sqlName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <#list table.columns as column>
            <if test="${column.columnNameFirstLower} != null">
                ${column.sqlName},
            </if>
        </#list>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        <#list table.columns as column>
            <if test="${column.columnNameFirstLower} != null">
                ${r'#{'}${column.columnNameFirstLower}, jdbcType=${column.jdbcSqlTypeName}${r'},'}
            </if>
        </#list>
        </trim>
    </insert>

</mapper>
